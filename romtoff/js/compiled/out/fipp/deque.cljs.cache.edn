;; Analyzed by ClojureScript 0.0-3211
{:defs {concat {:meta {:end-column 12, :end-line 15, :column 6, :line 15, :file "/Users/andrei/work/romtoff/resources/public/js/compiled/out/fipp/deque.cljs"}, :file "resources/public/js/compiled/out/fipp/deque.cljs", :line 15, :column 1, :end-line 15, :end-column 12, :test true, :name fipp.deque/concat}, conjlr {:protocol-inline nil, :meta {:arglists (quote ([l deque r])), :end-column 13, :end-line 12, :column 7, :line 12, :file "/Users/andrei/work/romtoff/resources/public/js/compiled/out/fipp/deque.cljs"}, :name fipp.deque/conjlr, :variadic false, :file "resources/public/js/compiled/out/fipp/deque.cljs", :end-column 13, :method-params ([l deque r]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 12, :end-line 12, :max-fixed-arity 3, :fn-var true, :arglists (quote ([l deque r])), :test true}, conjr {:meta {:end-column 11, :end-line 10, :column 6, :line 10, :file "/Users/andrei/work/romtoff/resources/public/js/compiled/out/fipp/deque.cljs"}, :file "resources/public/js/compiled/out/fipp/deque.cljs", :line 10, :column 1, :end-line 10, :end-column 11, :test true, :name fipp.deque/conjr}, empty {:meta {:end-column 11, :end-line 8, :column 6, :line 8, :file "/Users/andrei/work/romtoff/resources/public/js/compiled/out/fipp/deque.cljs"}, :file "resources/public/js/compiled/out/fipp/deque.cljs", :line 8, :column 1, :end-line 8, :end-column 11, :test true, :name fipp.deque/empty}, create {:meta {:end-column 12, :end-line 6, :column 6, :line 6, :file "/Users/andrei/work/romtoff/resources/public/js/compiled/out/fipp/deque.cljs"}, :file "resources/public/js/compiled/out/fipp/deque.cljs", :line 6, :column 1, :end-line 6, :end-column 12, :test true, :name fipp.deque/create}}, :imports nil, :requires {clojure.core.rrb-vector clojure.core.rrb-vector, rrb clojure.core.rrb-vector}, :uses nil, :require-macros nil, :use-macros nil, :excludes #{concat empty}, :doc "Double-sided queue built on rrb vectors.", :name fipp.deque}